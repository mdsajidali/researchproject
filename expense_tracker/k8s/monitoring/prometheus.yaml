apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs: [ { targets: ['localhost:9090'] } ]

      - job_name: 'node-exporter'
        static_configs: [ { targets: ['node-exporter.monitoring.svc.cluster.local:9100'] } ]

      - job_name: 'cadvisor'
        static_configs: [ { targets: ['cadvisor.monitoring.svc.cluster.local:8080'] } ]

      - job_name: 'kube-state-metrics'
        static_configs: [ { targets: ['kube-state-metrics.monitoring.svc.cluster.local:8080'] } ]

      - job_name: 'expense-web-http'
        metrics_path: /probe
        params: { module: [http_2xx] }
        static_configs: [ { targets: ['expense-web.expense.svc.cluster.local:8000'] } ]
        relabel_configs:
          - { source_labels: [__address__], target_label: __param_target }
          - { source_labels: [__param_target], target_label: instance }
          - { target_label: __address__, replacement: 'blackbox-exporter.monitoring.svc.cluster.local:9115' }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector: { matchLabels: { app: prometheus } }
  template:
    metadata: { labels: { app: prometheus } }
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.55.0
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
          ports: [ { name: http, containerPort: 9090 } ]
          volumeMounts:
            - { name: data, mountPath: /prometheus }
            - { name: config, mountPath: /etc/prometheus }
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap: { name: prometheus-config }
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  selector: { app: prometheus }
  ports: [ { name: http, port: 9090, targetPort: http } ]
